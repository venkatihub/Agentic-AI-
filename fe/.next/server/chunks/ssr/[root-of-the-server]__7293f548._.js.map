{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/Venkat/AI_agents/fe/src/app/page.tsx"],"sourcesContent":["// // 'use client';\n// // import { useState, useRef } from 'react';\n// // import {\n// //   generateUI,\n// //   generateUIStream,\n// //   saveTemplate,\n// //   fetchAnalytics\n// // } from '@/lib/api';\n// // import HtmlPreview from '@/components/HtmlPreview';\n// // import FeedbackModal from '@/components/FeedbackModal';\n// // import { v4 as uuid } from 'uuid';\n\n// // export default function Home() {\n// //   const [command, setCommand] = useState('');\n// //   const [html, setHtml] = useState('');\n// //   const [templateId, setTemplateId] = useState('');\n// //   const [status, setStatus] = useState<string | null>(null);\n// //   const [validation, setValidation] = useState<any>(null);\n// //   const [showFeedback, setShowFeedback] = useState(false);\n// //   const [analytics, setAnalytics] = useState<any>(null);\n// //   const wsRef = useRef<WebSocket>();\n\n// //   async function handleGenerate() {\n// //     if (!command.trim()) return;\n// //     setStatus('Generating …');\n// //     setValidation(null);\n// //     try {\n// //       const res = await generateUI(command);\n// //       setHtml(res.html);\n// //       setTemplateId(res.template_id);\n// //       setValidation(res.validation);\n// //       setStatus(`Done in ${(res.processing_time || 0).toFixed(2)}s`);\n// //     } catch (e) {\n// //       setStatus((e as Error).message);\n// //     }\n// //   }\n\n// //   function handleGenerateRealtime() {\n// //     if (!command.trim()) return;\n// //     const sessionId = uuid();\n// //     setHtml('');\n// //     setStatus('Opening WebSocket …');\n// //     wsRef.current?.close();\n// //     wsRef.current = generateUIStream(\n// //       command,\n// //       sessionId,\n// //       msg => {\n// //         switch (msg.type) {\n// //           case 'status':\n// //             setStatus(msg.message);\n// //             break;\n// //           case 'validation':\n// //             setValidation(msg);\n// //             break;\n// //           case 'result':\n// //             setHtml(msg.html);\n// //             setTemplateId(msg.template_id);\n// //             setStatus(`Done in ${(msg.processing_time || 0).toFixed(2)}s`);\n// //             wsRef.current?.close();\n// //             break;\n// //           case 'error':\n// //             setStatus(msg.message);\n// //             wsRef.current?.close();\n// //             break;\n// //         }\n// //       },\n// //       err => {\n// //         setStatus('WS error');\n// //         console.error(err);\n// //       }\n// //     );\n// //   }\n\n// //   async function handleSave() {\n// //     try {\n// //       const res = await saveTemplate({\n// //         html,\n// //         parent_template_id: templateId,\n// //         user: 'demo-user',\n// //         confidence_score: validation?.confidence_score?.overall\n// //       });\n// //       alert(`saved as ${res.template_id}`);\n// //     } catch (e) {\n// //       alert((e as Error).message);\n// //     }\n// //   }\n\n// //   async function loadAnalytics() {\n// //     try {\n// //       const data = await fetchAnalytics();\n// //       setAnalytics(data);\n// //     } catch (e) {\n// //       alert((e as Error).message);\n// //     }\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen flex flex-col gap-6 p-6\">\n// //       <h1 className=\"text-3xl font-bold\">AI Web-Block Generator (Next JS)</h1>\n\n// //       <textarea\n// //         value={command}\n// //         onChange={e => setCommand(e.target.value)}\n// //         placeholder=\"Describe the component you need …\"\n// //         rows={3}\n// //         className=\"border p-2 w-full\"\n// //       />\n\n// //       <div className=\"flex gap-3\">\n// //         <button className=\"btn-primary\" onClick={handleGenerate}>\n// //           Generate (simple)\n// //         </button>\n// //         <button className=\"btn\" onClick={handleGenerateRealtime}>\n// //           Generate (real-time WS)\n// //         </button>\n// //         <button className=\"btn\" disabled={!html} onClick={handleSave}>\n// //           Save template\n// //         </button>\n// //         <button\n// //           className=\"btn\"\n// //           disabled={!templateId}\n// //           onClick={() => setShowFeedback(true)}\n// //         >\n// //           Feedback\n// //         </button>\n// //         <button className=\"btn\" onClick={loadAnalytics}>\n// //           Analytics\n// //         </button>\n// //       </div>\n\n// //       {status && <p className=\"italic\">{status}</p>}\n\n// //       {validation && (\n// //         <div className=\"border p-2 rounded bg-gray-50 text-sm\">\n// //           Verification: {validation.is_verified ? '✅' : '⚠️'} – confidence{' '}\n// //           {(validation.confidence_score?.overall || 0).toFixed(2)} <br />\n// //           {validation.warnings?.length > 0 && (\n// //             <span className=\"text-red-700\">\n// //               {validation.warnings.join(', ')}\n// //             </span>\n// //           )}\n// //         </div>\n// //       )}\n\n// //       {html && <HtmlPreview html={html} />}\n\n// //       {analytics && (\n// //         <pre className=\"bg-black text-white p-3 rounded overflow-auto\">\n// //           {JSON.stringify(analytics, null, 2)}\n// //         </pre>\n// //       )}\n\n// //       {showFeedback && templateId && (\n// //         <FeedbackModal\n// //           templateId={templateId}\n// //           onClose={() => setShowFeedback(false)}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n\n\n// 'use client';\n// import { useState, useRef } from 'react';\n// import {\n//   generateUI,\n//   generateUIStream,\n//   generateUIFromImage,\n//   saveTemplate,\n//   fetchAnalytics\n// } from '@/lib/api';\n// import HtmlPreview from '@/components/HtmlPreview';\n// import FeedbackModal from '@/components/FeedbackModal';\n// import ImagePicker from '@/components/ImagePicker';\n// import { v4 as uuid } from 'uuid';\n\n// export default function Home() {\n//   /* -------------- state -------------- */\n//   const [command, setCommand] = useState('');\n//   const [imageFile, setImageFile] = useState<File | null>(null);\n//   const [html, setHtml] = useState('');\n//   const [templateId, setTemplateId] = useState('');\n//   const [status, setStatus] = useState<string | null>(null);\n//   const [validation, setValidation] = useState<any>(null);\n//   const [showFeedback, setShowFeedback] = useState(false);\n//   const [analytics, setAnalytics] = useState<any>(null);\n//   const wsRef = useRef<WebSocket>();\n\n//   /* -------------- actions -------------- */\n//   async function handleGenerate() {\n//     if (!command.trim()) return;\n//     setStatus('Generating …');\n//     setValidation(null);\n//     try {\n//       const res = await generateUI(command);\n//       afterGenerate(res);\n//     } catch (e) {\n//       setStatus((e as Error).message);\n//     }\n//   }\n\n//   async function handleGenerateFromImg() {\n//     if (!imageFile) {\n//       alert('Select an image first');\n//       return;\n//     }\n//     setStatus('Uploading screenshot …');\n//     setValidation(null);\n//     try {\n//       const res = await generateUIFromImage(imageFile, command);\n//       afterGenerate(res);\n//     } catch (e) {\n//       setStatus((e as Error).message);\n//     }\n//   }\n\n//   /* still keeps the WebSocket option for text-only */\n//   function handleGenerateRealtime() { /* … unchanged … */ }\n\n//   function afterGenerate(res: any) {\n//     setHtml(res.html);\n//     setTemplateId(res.template_id);\n//     setValidation(res.validation);\n//     setStatus(`Done in ${(res.processing_time || 0).toFixed(2)}s`);\n//   }\n\n//   async function handleSave() { /* unchanged */ }\n\n//   async function loadAnalytics() { /* unchanged */ }\n\n//   /* -------------- UI -------------- */\n//   return (\n//     <div className=\"min-h-screen flex flex-col gap-6 p-6\">\n//       <h1 className=\"text-3xl font-bold\">\n//         AI Web-Block Generator (image + text)\n//       </h1>\n\n//       <textarea\n//         value={command}\n//         onChange={e => setCommand(e.target.value)}\n//         placeholder=\"Describe the component (optional)…\"\n//         rows={3}\n//         className=\"border p-2 w-full\"\n//       />\n\n//       <ImagePicker onSelect={setImageFile} />\n\n//       <div className=\"flex gap-3 flex-wrap\">\n//         <button className=\"btn-primary\" onClick={handleGenerate}>\n//           Generate (text only)\n//         </button>\n//         <button\n//           className=\"btn-primary\"\n//           disabled={!imageFile}\n//           onClick={handleGenerateFromImg}\n//         >\n//           Generate (image)\n//         </button>\n//         <button className=\"btn\" onClick={handleGenerateRealtime}>\n//           Generate (real-time WS)\n//         </button>\n//         <button className=\"btn\" disabled={!html} onClick={handleSave}>\n//           Save template\n//         </button>\n//         <button\n//           className=\"btn\"\n//           disabled={!templateId}\n//           onClick={() => setShowFeedback(true)}\n//         >\n//           Feedback\n//         </button>\n//         <button className=\"btn\" onClick={loadAnalytics}>\n//           Analytics\n//         </button>\n//       </div>\n\n//       {status && <p className=\"italic\">{status}</p>}\n\n//       {validation && (\n//         <div className=\"border p-2 rounded bg-gray-50 text-sm\">\n//           Verification: {validation.is_verified ? '✅' : '⚠️'} – confidence{' '}\n//           {(validation.confidence_score?.overall || 0).toFixed(2)}\n//           {validation.warnings?.length > 0 && (\n//             <span className=\"text-red-700\">\n//               {' '}\n//               – {validation.warnings.join(', ')}\n//             </span>\n//           )}\n//         </div>\n//       )}\n\n//       {html && <HtmlPreview html={html} />}\n\n//       {analytics && (\n//         <pre className=\"bg-black text-white p-3 rounded overflow-auto\">\n//           {JSON.stringify(analytics, null, 2)}\n//         </pre>\n//       )}\n\n//       {showFeedback && templateId && (\n//         <FeedbackModal\n//           templateId={templateId}\n//           onClose={() => setShowFeedback(false)}\n//         />\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface GenerateUIResponse {\n  html: string;\n  template_id: string;\n  confidence: number;\n  verified: boolean;\n  status: string;\n}\n\ninterface FeedbackResponse {\n  message: string;\n}\n\ninterface SaveUIResponse {\n  message: string;\n  template_id: string;\n}\n\nconst Home: React.FC = () => {\n  const [command, setCommand] = useState('');\n  const [htmlOutput, setHtmlOutput] = useState('');\n  const [templateId, setTemplateId] = useState('');\n  const [confidence, setConfidence] = useState<number | null>(null);\n  const [isVerified, setIsVerified] = useState<boolean | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isHelpful, setIsHelpful] = useState<boolean | null>(null);\n  const [feedbackComment, setFeedbackComment] = useState('');\n  const [userId] = useState(uuidv4()); // Generate unique user ID\n  const previewRef = useRef<HTMLDivElement>(null);\n\n  // Handle form submission to generate UI\n  const handleGenerate = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    setHtmlOutput('');\n    setConfidence(null);\n    setIsVerified(null);\n\n    try {\n      const response = await axios.post<GenerateUIResponse>('http://127.0.0.1:5000/generate-ui', {\n        command,\n        user_id: userId,\n      });\n\n      setHtmlOutput(response.data.html);\n      setTemplateId(response.data.template_id);\n      setConfidence(response.data.confidence);\n      setIsVerified(response.data.verified);\n    } catch (err) {\n      setError('Failed to generate UI. Please try again.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle save UI\n  const handleSave = async () => {\n    if (!htmlOutput || !templateId) return;\n\n    try {\n      const response = await axios.post<SaveUIResponse>('http://127.0.0.1:5000/save-ui', {\n        html: htmlOutput,\n        parent_template_id: templateId,\n        user: userId,\n        feedback: isHelpful,\n      });\n      alert(response.data.message);\n    } catch (err) {\n      setError('Failed to save template. Please try again.');\n      console.error(err);\n    }\n  };\n\n  // Handle feedback submission\n  const handleFeedback = async (helpful: boolean) => {\n    setIsHelpful(helpful);\n    try {\n      const response = await axios.post<FeedbackResponse>('http://127.0.0.1:5000/feedback', {\n        template_id: templateId,\n        user_id: userId,\n        is_helpful: helpful,\n        comments: feedbackComment,\n      });\n      alert(response.data.message);\n    } catch (err) {\n      setError('Failed to submit feedback. Please try again.');\n      console.error(err);\n    }\n  };\n\n  // Render HTML preview\n  useEffect(() => {\n    if (previewRef.current && htmlOutput) {\n      previewRef.current.innerHTML = htmlOutput;\n    }\n  }, [htmlOutput]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center p-4\">\n      <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">AI UI Block Generator</h1>\n\n      {/* Input Form */}\n      <form onSubmit={handleGenerate} className=\"w-full max-w-2xl mb-6\">\n        <div className=\"flex flex-col space-y-4\">\n          <textarea\n            className=\"w-full p-4 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            rows={4}\n            value={command}\n            onChange={(e) => setCommand(e.target.value)}\n            placeholder=\"Enter UI command (e.g., 'Create a modern contact form with name, email, and message fields')\"\n          />\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 disabled:bg-blue-300 transition\"\n          >\n            {isLoading ? (\n              <span className=\"flex items-center\">\n                <svg className=\"animate-spin h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\" />\n                </svg>\n                Generating...\n              </span>\n            ) : (\n              'Generate UI'\n            )}\n          </button>\n        </div>\n      </form>\n\n      {/* Error Message */}\n      <AnimatePresence>\n        {error && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            className=\"bg-red-100 text-red-700 p-4 rounded-lg mb-6 w-full max-w-2xl\"\n          >\n            {error}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Confidence and Verification Status */}\n      {(confidence !== null || isVerified !== null) && (\n        <div className=\"w-full max-w-2xl mb-6\">\n          <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n            <p className=\"text-sm text-gray-600\">\n              Confidence Score: {(confidence ?? 0).toFixed(2)} ({isVerified ? 'Verified' : 'Unverified'})\n            </p>\n            {!isVerified && (\n              <p className=\"text-sm text-yellow-600\">This output may need review due to low confidence.</p>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* HTML Preview */}\n      {htmlOutput && (\n        <div className=\"w-full max-w-2xl mb-6\">\n          <h2 className=\"text-xl font-semibold mb-2\">Preview</h2>\n          <div\n            ref={previewRef}\n            className=\"bg-white p-4 border rounded-lg shadow-sm overflow-auto\"\n            style={{ minHeight: '200px' }}\n          />\n          <div className=\"mt-4 flex space-x-4\">\n            <button\n              onClick={handleSave}\n              className=\"bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600\"\n            >\n              Save Template\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Feedback Section */}\n      {htmlOutput && (\n        <div className=\"w-full max-w-2xl\">\n          <h2 className=\"text-xl font-semibold mb-2\">Feedback</h2>\n          <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n            <p className=\"mb-2\">Was this output helpful?</p>\n            <div className=\"flex space-x-4 mb-4\">\n              <button\n                onClick={() => handleFeedback(true)}\n                className={`px-4 py-2 rounded-lg ${\n                  isHelpful === true ? 'bg-green-500 text-white' : 'bg-gray-200'\n                }`}\n              >\n                👍 Thumbs Up\n              </button>\n              <button\n                onClick={() => handleFeedback(false)}\n                className={`px-4 py-2 rounded-lg ${\n                  isHelpful === false ? 'bg-red-500 text-white' : 'bg-gray-200'\n                }`}\n              >\n                👎 Thumbs Down\n              </button>\n            </div>\n            <textarea\n              className=\"w-full p-4 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              rows={3}\n              value={feedbackComment}\n              onChange={(e) => setFeedbackComment(e.target.value)}\n              placeholder=\"Optional: Add comments about the output...\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":"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","debugId":null}}]
}